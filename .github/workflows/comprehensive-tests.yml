name: Comprehensive Testing - Section 10

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  test-registration:
    name: Test User Registration (Use Case 1)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Tesseract OCR
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr
    
    - name: Run Registration Tests
      run: |
        pytest tests/test_registration.py -v --tb=short
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: registration-test-results
        path: |
          .pytest_cache/
          
  test-authentication:
    name: Test User Authentication (Use Case 2)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Tesseract OCR
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr
    
    - name: Run Authentication Tests
      run: |
        pytest tests/test_authentication.py -v --tb=short
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: authentication-test-results
        path: |
          .pytest_cache/
          
  test-allergen-management:
    name: Test Allergen Management (Use Case 3)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Tesseract OCR
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr
    
    - name: Run Allergen Management Tests
      run: |
        pytest tests/test_allergen_management.py -v --tb=short
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allergen-management-test-results
        path: |
          .pytest_cache/
          
  test-scanning:
    name: Test Product Scanning (Use Case 4)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Tesseract OCR
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr
    
    - name: Run Product Scanning Tests
      run: |
        pytest tests/test_scanning.py -v --tb=short
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: scanning-test-results
        path: |
          .pytest_cache/
          
  test-ingredient-analysis:
    name: Test Ingredient Analysis (Use Case 5)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Tesseract OCR
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr
    
    - name: Run Ingredient Analysis Tests
      run: |
        pytest tests/test_ingredient_analysis.py -v --tb=short
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ingredient-analysis-test-results
        path: |
          .pytest_cache/
  
  integration-test:
    name: Full Integration Test Suite
    runs-on: ubuntu-latest
    needs: [test-registration, test-authentication, test-allergen-management, test-scanning, test-ingredient-analysis]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Tesseract OCR
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr
    
    - name: Run All Tests with Coverage
      run: |
        pytest tests/ -v --cov=app --cov-report=term-missing --cov-report=html --cov-report=xml
    
    - name: Generate Test Summary
      if: always()
      run: |
        echo "# Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Use Cases Tested" >> $GITHUB_STEP_SUMMARY
        echo "1. ✅ User Registration" >> $GITHUB_STEP_SUMMARY
        echo "2. ✅ User Authentication" >> $GITHUB_STEP_SUMMARY
        echo "3. ✅ Allergen Management" >> $GITHUB_STEP_SUMMARY
        echo "4. ✅ Product Scanning" >> $GITHUB_STEP_SUMMARY
        echo "5. ✅ Ingredient Analysis & Allergen Detection" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Statistics" >> $GITHUB_STEP_SUMMARY
        pytest tests/ --collect-only -q | head -n -2 | tail -n +1 >> $GITHUB_STEP_SUMMARY
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload coverage report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/
        
    - name: Upload XML coverage
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-xml
        path: coverage.xml
